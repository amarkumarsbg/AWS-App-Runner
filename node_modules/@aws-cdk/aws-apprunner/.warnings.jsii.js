function _aws_cdk_aws_apprunner_CfnObservabilityConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
        if (!visitedObjects.has(p.traceConfiguration))
            _aws_cdk_aws_apprunner_CfnObservabilityConfiguration_TraceConfigurationProperty(p.traceConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_CfnObservabilityConfiguration(p) {
}
function _aws_cdk_aws_apprunner_CfnObservabilityConfiguration_TraceConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_CfnService(p) {
}
function _aws_cdk_aws_apprunner_CfnService_AuthenticationConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_CodeConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_CodeConfigurationValuesProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_CodeRepositoryProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_EgressConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_EncryptionConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_HealthCheckConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_ImageConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_ImageRepositoryProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_InstanceConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_KeyValuePairProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_NetworkConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_ServiceObservabilityConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_SourceCodeVersionProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnService_SourceConfigurationProperty(p) {
}
function _aws_cdk_aws_apprunner_CfnVpcConnectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_CfnVpcConnector(p) {
}
function _aws_cdk_aws_apprunner_ImageRepositoryType(p) {
}
function _aws_cdk_aws_apprunner_Cpu(p) {
}
function _aws_cdk_aws_apprunner_Memory(p) {
}
function _aws_cdk_aws_apprunner_Runtime(p) {
}
function _aws_cdk_aws_apprunner_SourceConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeRepository))
            _aws_cdk_aws_apprunner_CodeRepositoryProps(p.codeRepository);
        if (!visitedObjects.has(p.imageRepository))
            _aws_cdk_aws_apprunner_ImageRepository(p.imageRepository);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_GithubRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationSource))
            _aws_cdk_aws_apprunner_ConfigurationSourceType(p.configurationSource);
        if (!visitedObjects.has(p.connection))
            _aws_cdk_aws_apprunner_GitHubConnection(p.connection);
        if (!visitedObjects.has(p.codeConfigurationValues))
            _aws_cdk_aws_apprunner_CodeConfigurationValues(p.codeConfigurationValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_EcrPublicProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            _aws_cdk_aws_apprunner_ImageConfiguration(p.imageConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_EcrProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            _aws_cdk_aws_apprunner_ImageConfiguration(p.imageConfiguration);
        if ("tag" in p)
            print("@aws-cdk/aws-apprunner.EcrProps#tag", "use `tagOrDigest`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_AssetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            _aws_cdk_aws_apprunner_ImageConfiguration(p.imageConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_Source(p) {
}
function _aws_cdk_aws_apprunner_GithubSource(p) {
}
function _aws_cdk_aws_apprunner_EcrSource(p) {
}
function _aws_cdk_aws_apprunner_EcrPublicSource(p) {
}
function _aws_cdk_aws_apprunner_AssetSource(p) {
}
function _aws_cdk_aws_apprunner_ImageConfiguration(p) {
}
function _aws_cdk_aws_apprunner_ImageRepository(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageRepositoryType))
            _aws_cdk_aws_apprunner_ImageRepositoryType(p.imageRepositoryType);
        if (!visitedObjects.has(p.imageConfiguration))
            _aws_cdk_aws_apprunner_ImageConfiguration(p.imageConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_SourceCodeVersion(p) {
}
function _aws_cdk_aws_apprunner_CodeRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeConfiguration))
            _aws_cdk_aws_apprunner_CodeConfiguration(p.codeConfiguration);
        if (!visitedObjects.has(p.connection))
            _aws_cdk_aws_apprunner_GitHubConnection(p.connection);
        if (!visitedObjects.has(p.sourceCodeVersion))
            _aws_cdk_aws_apprunner_SourceCodeVersion(p.sourceCodeVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            _aws_cdk_aws_apprunner_Source(p.source);
        if (!visitedObjects.has(p.cpu))
            _aws_cdk_aws_apprunner_Cpu(p.cpu);
        if (!visitedObjects.has(p.memory))
            _aws_cdk_aws_apprunner_Memory(p.memory);
        if (!visitedObjects.has(p.vpcConnector))
            _aws_cdk_aws_apprunner_IVpcConnector(p.vpcConnector);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_ConfigurationSourceType(p) {
}
function _aws_cdk_aws_apprunner_CodeConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationSource))
            _aws_cdk_aws_apprunner_ConfigurationSourceType(p.configurationSource);
        if (!visitedObjects.has(p.configurationValues))
            _aws_cdk_aws_apprunner_CodeConfigurationValues(p.configurationValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_CodeConfigurationValues(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtime))
            _aws_cdk_aws_apprunner_Runtime(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_GitHubConnection(p) {
}
function _aws_cdk_aws_apprunner_ServiceAttributes(p) {
}
function _aws_cdk_aws_apprunner_IService(p) {
}
function _aws_cdk_aws_apprunner_Service(p) {
}
function _aws_cdk_aws_apprunner_VpcConnectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_VpcConnectorAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroups))
            require("@aws-cdk/aws-ec2/.warnings.jsii.js")._aws_cdk_aws_ec2_ISecurityGroup(p.securityGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function _aws_cdk_aws_apprunner_IVpcConnector(p) {
}
function _aws_cdk_aws_apprunner_VpcConnector(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, _aws_cdk_aws_apprunner_CfnObservabilityConfigurationProps, _aws_cdk_aws_apprunner_CfnObservabilityConfiguration, _aws_cdk_aws_apprunner_CfnObservabilityConfiguration_TraceConfigurationProperty, _aws_cdk_aws_apprunner_CfnServiceProps, _aws_cdk_aws_apprunner_CfnService, _aws_cdk_aws_apprunner_CfnService_AuthenticationConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_CodeConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_CodeConfigurationValuesProperty, _aws_cdk_aws_apprunner_CfnService_CodeRepositoryProperty, _aws_cdk_aws_apprunner_CfnService_EgressConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_EncryptionConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_HealthCheckConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_ImageConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_ImageRepositoryProperty, _aws_cdk_aws_apprunner_CfnService_InstanceConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_KeyValuePairProperty, _aws_cdk_aws_apprunner_CfnService_NetworkConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_ServiceObservabilityConfigurationProperty, _aws_cdk_aws_apprunner_CfnService_SourceCodeVersionProperty, _aws_cdk_aws_apprunner_CfnService_SourceConfigurationProperty, _aws_cdk_aws_apprunner_CfnVpcConnectorProps, _aws_cdk_aws_apprunner_CfnVpcConnector, _aws_cdk_aws_apprunner_ImageRepositoryType, _aws_cdk_aws_apprunner_Cpu, _aws_cdk_aws_apprunner_Memory, _aws_cdk_aws_apprunner_Runtime, _aws_cdk_aws_apprunner_SourceConfig, _aws_cdk_aws_apprunner_GithubRepositoryProps, _aws_cdk_aws_apprunner_EcrPublicProps, _aws_cdk_aws_apprunner_EcrProps, _aws_cdk_aws_apprunner_AssetProps, _aws_cdk_aws_apprunner_Source, _aws_cdk_aws_apprunner_GithubSource, _aws_cdk_aws_apprunner_EcrSource, _aws_cdk_aws_apprunner_EcrPublicSource, _aws_cdk_aws_apprunner_AssetSource, _aws_cdk_aws_apprunner_ImageConfiguration, _aws_cdk_aws_apprunner_ImageRepository, _aws_cdk_aws_apprunner_SourceCodeVersion, _aws_cdk_aws_apprunner_CodeRepositoryProps, _aws_cdk_aws_apprunner_ServiceProps, _aws_cdk_aws_apprunner_ConfigurationSourceType, _aws_cdk_aws_apprunner_CodeConfiguration, _aws_cdk_aws_apprunner_CodeConfigurationValues, _aws_cdk_aws_apprunner_GitHubConnection, _aws_cdk_aws_apprunner_ServiceAttributes, _aws_cdk_aws_apprunner_IService, _aws_cdk_aws_apprunner_Service, _aws_cdk_aws_apprunner_VpcConnectorProps, _aws_cdk_aws_apprunner_VpcConnectorAttributes, _aws_cdk_aws_apprunner_IVpcConnector, _aws_cdk_aws_apprunner_VpcConnector };
